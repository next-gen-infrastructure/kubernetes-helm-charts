{{ if .Values.env.vaultSecret }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" . }}-vault
  namespace: {{ .Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" . | nindent 4 }}
spec:
  externalSecretName: {{ include "k8s-common.names.fullname" . }}-vault
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: {{ $.Release.Namespace }}
  externalSecretSpec:
    secretStoreRef:
      name: default
      kind: ClusterSecretStore
    target:
      name: {{ include "k8s-common.names.fullname" . }}-vault
    data:
    {{- $allVaultSecrets := default (dict) .Values.env.vaultSecret -}}
    {{- range $key, $value := $allVaultSecrets }}
      - secretKey: {{ $key }}
        remoteRef:
          key: {{ if $value.fullPath -}}
            {{- $value.fullPath -}}
          {{- else -}}
            secret-{{ $.Values.global.org }}/data/
            {{- $.Values.global.environmentType -}}
            /k8s/{{ $value.path }}
          {{- end }}
          property: {{ default $key $value.secret }}
    {{ end -}}
{{ end -}}

{{- range .Values.sidecarContainers }}
{{- $values := dict "Values" . "Release" $.Release "Template" $.Template -}}
{{ if $values.Values.env.vaultSecret }}
{{ $name := default $.Release.Name $values.Values.global.serviceName }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" $values }}-vault
  namespace: {{ $.Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" $ | nindent 4 }}
spec:
  externalSecretName: {{ include "k8s-common.names.fullname" . }}-vault
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: {{ $.Release.Namespace }}
  externalSecretSpec:
    secretStoreRef:
      name: default
      kind: ClusterSecretStore
    target:
      name: {{ include "k8s-common.names.fullname" $values }}-vault
    data:
    {{- $allVaultSecrets := default (dict) $values.Values.env.vaultSecret -}}
    {{- range $key, $value := $allVaultSecrets }}
      - secretKey: {{ $key }}
        remoteRef:
          key: {{ if $value.fullPath -}}
            {{- $value.fullPath -}}
            {{- else -}}
            secret-{{ $.Values.global.org }}/data/
            {{- $.Values.global.environmentType -}}
            /k8s/{{ $.Release.Namespace}}/{{ $value.path }}
          {{- end }}
          property: {{ default $key $value.secret }}
  {{ end -}}
{{ end -}}
{{ end -}}

{{- if .Values.vaultVolumesSupport -}}
{{- $allVolumes := default (dict) .Values.volumes -}}
{{- range $key, $value := $allVolumes }}
{{- if $value.vaultPath -}}
{{- $vaultPath := $value.vaultPath }}
{{- $items := default (list) $value.items }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: {{ include "k8s-common.names.fullname" $ }}-vault-{{ $key }}
  namespace: {{ $.Release.Namespace }}
  labels: {{ include "k8s-common.labels.standard" $ | nindent 4 }}
spec:
  externalSecretName: {{ include "k8s-common.names.fullname" $ }}-vault-{{ $key }}
  namespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: {{ $.Release.Namespace }}
  externalSecretSpec:
    secretStoreRef:
      name: default
      kind: ClusterSecretStore
    target:
      name: {{ include "k8s-common.names.fullname" $ }}-vault-{{ $key }}
    data:
    {{- range $items }}
      - secretKey: {{ . }}
        remoteRef:
          key: secret-{{ $.Values.global.org }}/data/
            {{- $.Values.global.environmentType -}}
            /k8s/{{ $vaultPath }}
          property: {{ . }}
    {{ end -}}
  {{ end -}}
  {{ end -}}
{{- end -}}
